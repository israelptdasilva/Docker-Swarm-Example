version: '3.9'

services:  
  nginx:
    image: nginx 
    ports:
      - 3001:80
      - 3002:443
    configs:
      - source: config_nginx
        target: /etc/nginx/templates/default.conf.template
    environment:
      APP_HOST: app
    networks: 
      - services 
  
  app:
    image: localhost:5000/app:latest
    command: ['./config/wait-for-it.sh', 'database', '--', './config/wait-for-it.sh', 'cache', '--', 'npm', 'start']
    environment:
      MYSQL_HOST: database 
      MYSQL_DATABASE: products
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      REDIS_HOST: cache
      REDIS_PORT: 6379
    networks:
      - services

  database:
    image: mysql 
    hostname: products-db 
    configs:
      - source: config_mysql
        target: /docker-entrypoint-initdb.d/init.sql  
    environment:
      MYSQL_DATABASE: products
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db:/home/lib/mysql
    networks:
      - services
    healthcheck:
      test: mysql -p$$MYSQL_ROOT_PASSWORD --silent -e 'SHOW DATABASES;'
      interval: 3s
      timeout: 3s
      retries: 10

  cache:
    image: redis
    entrypoint: redis-server
    command: --save 60 1 --loglevel warning 
    volumes:
      - cache:/data
    networks: 
      - services 
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 3s
      retries: 10

  monitoring:
    image: prom/prometheus 
    configs:
      - source: config_prometheus
        target: /tmp/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - services

configs:
  config_mysql:
    file: ./config/mysql/init.sql 
  config_nginx:
    file: ./config/nginx/templates/default.conf.template
  config_prometheus:
    file: ./config/prometheus/prometheus.yml

networks:
  ingress:
    driver: overlay
  services:
    driver: overlay

volumes:
  db: {}
  cache: {}
